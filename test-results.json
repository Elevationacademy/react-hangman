{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":3,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1539171914365,"success":false,"testResults":[{"console":null,"failureMessage":"  ● Score component should have a \"score\" property\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      21 | it('Score component should have a \"score\" property', () => {\n      22 |     const wrapper = mount(<App />);\n    > 23 |     expect(wrapper.find(Score).props().score).toBeDefined();\n         |                                               ^\n      24 | });\n      25 | \n      26 | it('Score component should take value from app.js state', () => {\n\n      at Object.newMatcher [as toBeDefined] (node_modules/jest-expect-message/dist/withMessage.js:23:14)\n      at Object.toBeDefined (.test/ex-1.test.js:23:47)\n\n  ● Score component should take value from app.js state\n\n    expect(received).toEqual(expected)\n\n    Expected value to equal:\n      200\n    Received:\n      undefined\n\n    Difference:\n\n      Comparing two different types of values. Expected number but received undefined.\n\n      28 |     wrapper.setState({ score: 200 });\n      29 |     wrapper.update();\n    > 30 |     expect(wrapper.find(Score).props().score).toEqual(200);\n         |                                               ^\n      31 | });\n      32 | \n      33 | \n\n      at Object.newMatcher [as toEqual] (node_modules/jest-expect-message/dist/withMessage.js:23:14)\n      at Object.toEqual (.test/ex-1.test.js:30:47)\n","numFailingTests":2,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1539171917265,"start":1539171915262},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/tal/Documents/Projects/hangman-class/.test/ex-1.test.js","testResults":[{"ancestorTitles":[],"duration":18,"failureMessages":[],"fullName":"Application should render without crashing","location":null,"numPassingAsserts":0,"status":"passed","title":"Application should render without crashing"},{"ancestorTitles":[],"duration":25,"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.newMatcher [as toBeDefined] (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-expect-message/dist/withMessage.js:23:14)\n    at Object.toBeDefined (/Users/tal/Documents/Projects/hangman-class/.test/ex-1.test.js:23:47)\n    at Object.asyncJestTest (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"],"fullName":"Score component should have a \"score\" property","location":null,"numPassingAsserts":0,"status":"failed","title":"Score component should have a \"score\" property"},{"ancestorTitles":[],"duration":8,"failureMessages":["Error: expect(received).toEqual(expected)\n\nExpected value to equal:\n  200\nReceived:\n  undefined\n\nDifference:\n\n  Comparing two different types of values. Expected number but received undefined.\n    at Object.newMatcher [as toEqual] (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-expect-message/dist/withMessage.js:23:14)\n    at Object.toEqual (/Users/tal/Documents/Projects/hangman-class/.test/ex-1.test.js:30:47)\n    at Object.asyncJestTest (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/tal/Documents/Projects/hangman-class/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:188:7)"],"fullName":"Score component should take value from app.js state","location":null,"numPassingAsserts":0,"status":"failed","title":"Score component should take value from app.js state"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}